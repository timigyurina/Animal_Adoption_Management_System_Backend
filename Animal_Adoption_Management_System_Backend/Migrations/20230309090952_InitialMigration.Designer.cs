// <auto-generated />
using System;
using Animal_Adoption_Management_System_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Animal_Adoption_Management_System_Backend.Migrations
{
    [DbContext(typeof(AnimalAdoptionContext))]
    [Migration("20230309090952_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLineOne")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressLineTwo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.AdoptionApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ApplierId")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("ApplierId");

                    b.ToTable("AdoptionApplications");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.AdoptionContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer");

                    b.Property<int>("ApplierAddressId")
                        .HasColumnType("integer");

                    b.Property<string>("ApplierId")
                        .HasColumnType("text");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("ApplierAddressId");

                    b.HasIndex("ApplierId");

                    b.ToTable("AdoptionContracts");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("BreedId")
                        .HasColumnType("integer");

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<bool>("IsSterilised")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SterilisationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BreedId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.AnimalBreed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AnimalBreeds");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.AnimalShelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ShelterId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("ShelterId");

                    b.ToTable("AnimalShelters");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DonatorId")
                        .HasColumnType("text");

                    b.Property<int>("ShelterId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DonatorId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateTaken")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UploaderId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("UploaderId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.ManagedAdoptionContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContractId")
                        .HasColumnType("integer");

                    b.Property<string>("ManagerId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("ManagerId");

                    b.ToTable("ManagedAdoptionContracts");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("ContactPersonId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ContactPersonId");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.AdoptionApplication", b =>
                {
                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.Animal", "Animal")
                        .WithMany("AdoptionApplications")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.User", "Applier")
                        .WithMany("AdoptionApplications")
                        .HasForeignKey("ApplierId");

                    b.Navigation("Animal");

                    b.Navigation("Applier");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.AdoptionContract", b =>
                {
                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.Animal", "Animal")
                        .WithMany("AdoptionContracts")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.Address", "ApplierAddress")
                        .WithMany()
                        .HasForeignKey("ApplierAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.User", "Applier")
                        .WithMany("AdoptionsContracts")
                        .HasForeignKey("ApplierId");

                    b.Navigation("Animal");

                    b.Navigation("Applier");

                    b.Navigation("ApplierAddress");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.Animal", b =>
                {
                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.AnimalBreed", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Breed");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.AnimalShelter", b =>
                {
                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.Animal", "Animal")
                        .WithMany("AnimalShelters")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.Shelter", "Shelter")
                        .WithMany("Animals")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.Donation", b =>
                {
                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.User", "Donator")
                        .WithMany("Donations")
                        .HasForeignKey("DonatorId");

                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.Shelter", "Shelter")
                        .WithMany("Donations")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donator");

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.Image", b =>
                {
                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.Animal", "Animal")
                        .WithMany("Images")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.User", "Uploader")
                        .WithMany()
                        .HasForeignKey("UploaderId");

                    b.Navigation("Animal");

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.ManagedAdoptionContract", b =>
                {
                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.AdoptionContract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.User", "Manager")
                        .WithMany("ManagedAdoptionsContracts")
                        .HasForeignKey("ManagerId");

                    b.Navigation("Contract");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.Shelter", b =>
                {
                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Animal_Adoption_Management_System_Backend.Models.Entities.User", "ContactPerson")
                        .WithMany()
                        .HasForeignKey("ContactPersonId");

                    b.Navigation("Address");

                    b.Navigation("ContactPerson");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.Animal", b =>
                {
                    b.Navigation("AdoptionApplications");

                    b.Navigation("AdoptionContracts");

                    b.Navigation("AnimalShelters");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.Shelter", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Donations");
                });

            modelBuilder.Entity("Animal_Adoption_Management_System_Backend.Models.Entities.User", b =>
                {
                    b.Navigation("AdoptionApplications");

                    b.Navigation("AdoptionsContracts");

                    b.Navigation("Donations");

                    b.Navigation("ManagedAdoptionsContracts");
                });
#pragma warning restore 612, 618
        }
    }
}
